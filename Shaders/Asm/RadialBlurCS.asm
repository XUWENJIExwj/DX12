//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbSettings
// {
//
//   int2 gScreenSize;                  // Offset:    0 Size:     8
//   int2 gCenter;                      // Offset:    8 Size:     8
//   int gSampleDistance;               // Offset:   16 Size:     4
//   int gSampleStrength;               // Offset:   20 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gInput                            texture  float4          2d             t0      1 
// gOutput                               UAV  float4          2d             u0      1 
// cbSettings                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -8, 0, 0, 0},
                              { -5, 0, 0, 0},
                              { -3, 0, 0, 0},
                              { -2, 0, 0, 0},
                              { -1, 0, 0, 0},
                              { 1, 0, 0, 0},
                              { 2, 0, 0, 0},
                              { 3, 0, 0, 0},
                              { 5, 0, 0, 0},
                              { 8, 0, 0, 0} }
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadID.xy
dcl_temps 6
dcl_thread_group 16, 16, 1
iadd r0.xy, -vThreadID.xyxx, cb0[0].zwzz
mov r1.xy, vThreadID.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
imax r0.z, cb0[1].x, -cb0[1].x
mov r2.zw, l(0,0,0,0)
mov r3.xyzw, r1.xyzw
mov r0.w, l(0)
loop 
  ige r4.x, r0.w, l(10)
  breakc_nz r4.x
  imul null, r4.xy, r0.xyxx, icb[r0.w + 0].xxxx
  xor r4.zw, r4.xxxy, cb0[1].xxxx
  imax r4.xy, r4.xyxx, -r4.xyxx
  udiv r4.xy, null, r4.xyxx, r0.zzzz
  ineg r5.xy, r4.xyxx
  and r4.zw, r4.zzzw, l(0, 0, 0x80000000, 0x80000000)
  movc r4.xy, r4.zwzz, r5.xyxx, r4.xyxx
  iadd r2.xy, r4.xyxx, vThreadID.xyxx
  ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyzw, t0.xyzw
  add r3.xyzw, r3.xyzw, r4.xyzw
  iadd r0.w, r0.w, l(1)
endloop 
itof r0.xy, r0.xyxx
itof r0.zw, cb0[0].xxxy
div r0.xy, r0.xyxx, r0.zwzz
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
itof r0.y, cb0[1].y
mul_sat r0.x, r0.y, r0.x
mad r2.xyzw, r3.xyzw, l(0.090909, 0.090909, 0.090909, 0.090909), -r1.xyzw
mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw
store_uav_typed u0.xyzw, vThreadID.xyyy, r0.xyzw
ret 
// Approximately 34 instruction slots used
